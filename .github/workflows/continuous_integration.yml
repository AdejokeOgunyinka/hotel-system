name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    services:
      postgres:
        image: postgres:11
        ports:
          - '5432:5432'
        env:
          POSTGRES_DB: ${{secrets.DB_NAME}}
          POSTGRES_USER: ${{secrets.DB_USER}}
          POSTGRES_HOST: ${{secrets.DB_HOST}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: psycopg2 prerequisites
      run: sudo apt-get install python-dev libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run migrations
      env: 
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        DATABASE_URL: ${{secrets.DATABASE_URL}}
        CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_API_SECRET}}
        CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
        CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}

      run: |
        python manage.py migrate
    - name: Run test
      env: 
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        DATABASE_URL: ${{secrets.DATABASE_URL}}
        CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_API_SECRET}}
        CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
        CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
      run: |
        python manage.py test